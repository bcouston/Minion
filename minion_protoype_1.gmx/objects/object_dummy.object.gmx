<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>train_dummy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{

    //Damage stuff currently redundant but could be useful later
    
    //Constants
    damage_interval = 10
    
    //Timers
    damage_timer = -1
    
    //Health
    baddie_health = 20
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{

    //Animation
    if (sprite_index == dummy_damage || sprite_index == dummy_damage_2) &amp;&amp; image_index = image_number - 1 {
        sprite_index = train_dummy
    }
    //Dead
    if sprite_index == dummy_dead &amp;&amp; image_index = image_number - 1 {
        audio_sound_pitch(dummy_die, random_range(0.8,1.2))
        audio_play_sound(dummy_die, 10, false)
        instance_destroy()
    }
    
    if baddie_health &lt;= 0 {
        sprite_index = dummy_dead
    }
    
    // Damage
    
    if (place_meeting(x, y, object_player_combat_hitbox)
        &amp;&amp; (sprite_index != dummy_dead) &amp;&amp;
        ((sprite_index != dummy_damage) || (sprite_index != dummy_damage_2))) {
        baddie_health -= object_player.moe_damage
        if place_meeting(x+object_player.player_damage_range, y, object_player) {
            sprite_index = dummy_damage
        } else
        if place_meeting(x-object_player.player_damage_range, y, object_player) {
            sprite_index = dummy_damage_2
        }
        audio_sound_pitch(sword_impact_1, random_range(0.95,1.05))
        audio_play_sound(sword_impact_1, 10, false)
        instance_create(x + 16, y + 16, object_hit_part)
    }   

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
