<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>merv_still_l</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>player_arrived = false
dialog_listener = 0
current_timeline_index = 0
timeline_in_progress = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (object_door_sensor.player_arrived) &amp;&amp; (!player_arrived) {
    player_arrived = true
    current_timeline_index++
}

if (dialog_listener = 1) {
    if (global.completed_message) {
        timeline_in_progress = false
        dialog_listener = 0
        current_timeline_index++
    }
}

// Start timelines in sequence
if (!timeline_in_progress) &amp;&amp; (player_arrived) {
    timeline_running = false;
    if (current_timeline_index == 1) {
        timeline_index = cutscene_minion_queue_1;
    } else if (current_timeline_index == 2) {
        timeline_index = cutscene_minion_queue_2;
    } else if (current_timeline_index == 3) {
        timeline_index = cutscene_minion_queue_3;
    } else if (current_timeline_index == 4) {
        timeline_index = cutscene_minion_queue_4;
    } else if (current_timeline_index == 5) {
        timeline_index = cutscene_minion_queue_5;
    } else if (current_timeline_index == 6) {
        timeline_index = cutscene_minion_queue_6;
    } else if (current_timeline_index == 7) {
        timeline_index = cutscene_minion_queue_7;
    } else if (current_timeline_index == 8) {
        timeline_index = cutscene_minion_queue_8;
    } else if (current_timeline_index == 9) {
        timeline_index = cutscene_minion_queue_9;
    } else if (current_timeline_index == 10) {
        timeline_index = cutscene_minion_queue_10;
    } else if (current_timeline_index == 11) {
        timeline_index = cutscene_minion_queue_11;
    } else if (current_timeline_index == 12) {
        timeline_index = cutscene_minion_queue_12;
    } else if (current_timeline_index == 13) {
        timeline_index = cutscene_minion_queue_13;
    } else if (current_timeline_index == 14) {
        timeline_index = cutscene_minion_queue_14;
    } else if (current_timeline_index == 15) {
        timeline_index = cutscene_minion_queue_15;
    } else if (current_timeline_index == 16) {
        timeline_index = cutscene_minion_queue_16;
    } else if (current_timeline_index == 17) {
        timeline_index = cutscene_minion_queue_17;
    } else if (current_timeline_index == 18) {
        timeline_index = cutscene_minion_queue_18;
    } else if (current_timeline_index == 19) {
        timeline_index = cutscene_minion_queue_19;
    } else if (current_timeline_index == 20) {
        timeline_index = cutscene_minion_queue_20;
    } else if (current_timeline_index == 21) {
        timeline_index = cutscene_minion_queue_21;
    } else if (current_timeline_index == 22) {
        timeline_index = cutscene_minion_queue_22;
    } else if (current_timeline_index == 23) {
        timeline_index = cutscene_minion_queue_23;
    } else if (current_timeline_index == 24) {
        timeline_index = cutscene_minion_queue_24;
    } else if (current_timeline_index == 25) {
        timeline_index = cutscene_minion_queue_25;
    } else if (current_timeline_index == 26) {
        timeline_index = cutscene_minion_queue_26;
    } else if (current_timeline_index == 27) {
        timeline_index = cutscene_minion_queue_27;
    } else if (current_timeline_index == 28) {
        timeline_index = cutscene_minion_queue_28;
    } else if (current_timeline_index == 29) {
        timeline_index = cutscene_minion_queue_29;
    } else if (current_timeline_index == 30) {
        timeline_index = cutscene_minion_queue_30;
    }
    if (current_timeline_index == 31) {
        timeline_running = false
        global.player_disable = false
    }  else {
        timeline_position = 0;
        timeline_running = true;
        timeline_in_progress = true
    }
}

if (sprite_index == merv_suprised_l) {
    if (image_index == (image_number - 1)) {
        image_speed = 0
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
