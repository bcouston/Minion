<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>moe_walk_right</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    platform_collisions_create(16);
    wall_l_jump_timer = -1;
    wall_r_jump_timer = -1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{  

    // Timer set

    if (wall_l_jump_timer &lt;= 0) {
      wall_l_jump_timer = -1;
    } else {
      wall_l_jump_timer -= 1;
    } 
    if (wall_r_jump_timer &lt;= 0) {
      wall_r_jump_timer = -1;
    } else {
      wall_r_jump_timer -= 1;
    }     
    
    platform_collisions_step(object_solid)
    
    if (place_free(x,y+1)){
        gravity = 0.8;
        if (place_meeting(x+1,y,object_solid) || place_meeting(x-1,y,object_solid))
            &amp;&amp; (vspeed &gt; 0) {
            gravity = 0.2;
        }
    } else {
        gravity = 0;
    }
    
    // L/R movement and jumping
    if (keyboard_check(ord('D')) &amp;&amp; place_free(x+1,y))
        &amp;&amp; (wall_r_jump_timer &lt;= 0) {
        hspeed = 4
        sprite_index = moe_walk_right
    }
    if (keyboard_check(ord('A')) &amp;&amp; place_free(x-1,y))
        &amp;&amp; (wall_l_jump_timer &lt;= 0) {
        hspeed = -4
        sprite_index = moe_walk_left
    }
    if(keyboard_check_pressed(ord('W')) &amp;&amp; !place_free(x,y+1) &amp;&amp; place_free(x,y-1)) {
        vspeed = -10
    }
    
    // Wall jump
    if keyboard_check_pressed(ord('W')) &amp;&amp; place_free(x,y+1) &amp;&amp; place_free(x,y-1) {
        if place_meeting(x+1,y,object_solid) {
            vspeed = -10
            hspeed = -6
            wall_r_jump_timer = 15;
        }
        if place_meeting(x-1,y,object_solid) {
            vspeed = -10
            hspeed = 6
            wall_l_jump_timer = 15;
        }
    }
    
    // Static friction
    if ((!keyboard_check(ord('D'))) &amp;&amp; (!keyboard_check(ord('A')))) {
        platform_friction(1,true);
    } else {
        platform_friction(1,false);
    } 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
