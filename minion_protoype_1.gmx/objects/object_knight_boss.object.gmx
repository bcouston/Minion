<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>knight_idle_1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{
    direction_facing = "right"
    player_attack_range = 35
    beam_range = 100
    beam_delay = 20
    attack_timer = -1
    attack_range_timer = -1 
    beam_attack_timer = -1
    attack_interval = 30
    attack_range = 10
    y_range = 10
    attack = false
    attack_or_beam = "attack"
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>{

    // Direction
    
     if (object_player.x - x &gt; 0) {direction_facing = "right"}
     if (object_player.x - x &lt; 0) {direction_facing = "left"}

    // Animation
    
    if attack == true {
        hspeed = 0
        if image_index == image_number - 1 {
            attack = false
            if direction_facing == "right" {
                sprite_index = knight_prone_still_r
            } else {sprite_index = knight_prone_still_l}
            attack_timer = attack_interval
        }
    }

    // --- Timers ---
    
    // Attack rate
    
    if (attack_timer &lt;= 0) {
      attack_timer = -1;
    } else {
      attack_timer -= 1;
    }
    
    // Attack player when in range
    
    if attack_range_timer &lt;= 0 &amp;&amp; attack_range_timer != -1 {
      attack_range_timer = -1
      
      //Attack
      
      if direction_facing == "right" {
        attack = true
        attack_timer = player_attack_range
        if attack_or_beam == "attack" {
            sprite_index = knight_attack_1_r
        } else {
            sprite_index = knight_attack_2_r
            instance_create(x, y, object_sword_blast_r)
            audio_play_sound(beam_1, 10, false)
        }
      } else {
        attack = true
        attack_timer = player_attack_range
        if attack_or_beam = "attack" {
            sprite_index = knight_attack_1_l
        } else {
            sprite_index = knight_attack_2_l
            instance_create(x, y, object_sword_blast_l)
            audio_play_sound(beam_1, 10, false)
        }
      }
      
    } else if attack_range_timer != -1 {
      attack_range_timer -= 1;
    }
    
    //Shoot beam when not in range
    
    if (object_player.x - x &gt;= beam_range) {
        attack_or_beam = "beam"
         if attack_range_timer == -1 {
            attack_range_timer = beam_delay
         }       
    }
      
    
    //-----MOVEMENT-----
    
    if attack_timer == -1 || attack_or_beam = "beam" {
    
        // Stationary and attack if player in range
        
        if (object_player.x - x &lt;= player_attack_range) &amp;&amp;
            (object_player.x - x &gt;= (-1 * player_attack_range)) &amp;&amp;
            (object_player.y - y &gt;= (-1 * y_range)) {
            attack_or_beam = "attack"
            if attack_range_timer == -1 {
                attack_range_timer = attack_range
            }
        } else
        
        // Movement towards player horizontally
        
        if attack_range_timer == -1 {
        
            if object_player.x &gt; x {
                hspeed = 2
                direction_facing = "right"
                sprite_index = knight_prone_move_r
            }
            else if object_player.x &lt; x {
                hspeed = -2
                direction_facing = "left"
                sprite_index = knight_prone_move_l
            }
        
        }
    
    }

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
